name: Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  test:
    name: Run Tests
    runs-on: macos-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: '14.2'
    
    # Set up test environment
    - name: Set up test environment
      run: |
        # Create test directories
        mkdir -p UIBaselines
        mkdir -p .build/debug/codecov
        
        # Set up permissions for Speech Recognition in tests
        defaults write com.apple.speech.recognition.AppleSpeechRecognitionServer AllowAudioDucking -bool YES
        defaults write com.apple.speech.recognition.AppleSpeechRecognitionServer AllowHeadlessModeForTests -bool YES
    
    # Feature Tests
    - name: Run Writing Style Tests
      run: swift test --filter "MacAITextImproverTests.WritingStyleTests"
    
    - name: Run AI Service Tests
      run: swift test --filter "MacAITextImproverTests.AIServiceTests"
    
    - name: Run Speech Recognition Tests
      run: |
        # Mock speech recognition authorization for tests
        defaults write com.apple.speech.recognition.AppleSpeechRecognitionServer AuthorizationStatus -int 3
        swift test --filter "MacAITextImproverTests.SpeechRecognitionTests"
    
    - name: Run Text-to-Speech Tests
      run: swift test --filter "MacAITextImproverTests.TextToSpeechTests"
    
    # UI Tests
    - name: Run Content View Tests
      run: |
        # Set up UI test environment
        defaults write com.apple.CoreSimulator.IndigoFramebufferServices FramebufferStatus -bool NO
        swift test --filter "MacAITextImproverTests.ContentViewTests"
    
    - name: Run UI Consistency Tests
      run: swift test --filter "MacAITextImproverTests.UIConsistencyTests"
    
    # Generate Coverage Report
    - name: Generate Code Coverage
      run: |
        swift test --enable-code-coverage
        xcrun llvm-cov export -format="lcov" \
          .build/debug/MacAITextImproverPackageTests.xctest/Contents/MacOS/MacAITextImproverPackageTests \
          -instr-profile .build/debug/codecov/default.profdata \
          > coverage.lcov
    
    # Upload Coverage
    - name: Upload to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.lcov
        fail_ci_if_error: true
    
    # Upload Test Results
    - name: Upload Test Results
      uses: actions/upload-artifact@v3
      with:
        name: test-results
        path: |
          .build/debug/codecov/
          coverage.lcov
          UIBaselines/
    
    # Create Test Report
    - name: Create Test Summary
      if: always()
      run: |
        echo "# Test Results Summary" > test_summary.md
        echo "" >> test_summary.md
        echo "## Coverage Report" >> test_summary.md
        echo "\`\`\`" >> test_summary.md
        cat coverage.lcov | grep -E "^SF:|^LF:|^LH:" >> test_summary.md
        echo "\`\`\`" >> test_summary.md
        
        # Add UI test results if available
        if [ -d "UIBaselines/Reports" ]; then
          echo "" >> test_summary.md
          echo "## UI Test Results" >> test_summary.md
          cat UIBaselines/Reports/*.md >> test_summary.md
        fi
    
    # Add PR Comment
    - name: Comment PR
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v6
      with:
        script: |
          const fs = require('fs');
          const summary = fs.readFileSync('test_summary.md', 'utf8');
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.name,
            body: summary
          });