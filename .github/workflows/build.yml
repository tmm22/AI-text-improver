---
name: Build and Release

on:
  push:
    tags:
      - "v*"
  workflow_dispatch: {}

defaults:
  run:
    shell: bash

permissions:
  contents: write

jobs:
  verify:
    name: Run Tests
    runs-on: macos-13
    outputs:
      version: ${{ steps.get_version.outputs.version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get Version
        id: get_version
        run: |
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            VERSION=${GITHUB_REF#refs/tags/v}
          else
            VERSION=$(cat VERSION)
          fi
          echo "version=${VERSION}" >> "$GITHUB_OUTPUT"
          echo "Building version: ${VERSION}"

      - name: Setup Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: "15.0.1"

      - name: Run Tests
        run: |
          set -euo pipefail
          swift test --enable-test-discovery --enable-code-coverage --verbose

  build:
    name: Build App
    needs: verify
    runs-on: macos-13
    env:
      VERSION: ${{ needs.verify.outputs.version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: "15.0.1"

      - name: Build Project
        run: |
          set -euo pipefail
          rm -rf .build MacAITextImprover.app artifacts
          mkdir -p artifacts
          swift build -c release

      - name: Create App Bundle
        run: |
          set -euo pipefail
          mkdir -p MacAITextImprover.app/Contents/{MacOS,Resources}
          cp .build/release/MacAITextImprover MacAITextImprover.app/Contents/MacOS/
          chmod +x MacAITextImprover.app/Contents/MacOS/MacAITextImprover

          cat > MacAITextImprover.app/Contents/Info.plist << EOL
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
    <key>CFBundlePackageType</key>
    <string>APPL</string>
    <key>CFBundleExecutable</key>
    <string>MacAITextImprover</string>
    <key>CFBundleIdentifier</key>
    <string>com.example.macaitextimprover</string>
    <key>CFBundleName</key>
    <string>Mac AI Text Improver</string>
    <key>CFBundleShortVersionString</key>
    <string>${VERSION}</string>
    <key>CFBundleVersion</key>
    <string>1</string>
    <key>LSMinimumSystemVersion</key>
    <string>12.0</string>
    <key>NSHighResolutionCapable</key>
    <true/>
    <key>LSApplicationCategoryType</key>
    <string>public.app-category.productivity</string>
    <key>NSMicrophoneUsageDescription</key>
    <string>We need access to your microphone for speech recognition.</string>
    <key>NSSpeechRecognitionUsageDescription</key>
    <string>We need speech recognition permission to convert your speech to text.</string>
</dict>
</plist>
EOL

      - name: Create DMG
        id: create_dmg
        run: |
          set -euo pipefail
          DMG_NAME="MacAITextImprover-${VERSION}.dmg"
          hdiutil create -volname "MacAITextImprover" \
                        -srcfolder MacAITextImprover.app \
                        -ov -format UDZO \
                        "artifacts/${DMG_NAME}"

          echo "dmg_path=artifacts/${DMG_NAME}" >> "$GITHUB_OUTPUT"

      - name: Prepare Release Notes
        id: prepare_notes
        run: |
          set -euo pipefail
          awk "/## \[${VERSION}\]/,/## \[/" CHANGELOG.md | sed '$d' > artifacts/release_notes.md
          echo "notes_path=artifacts/release_notes.md" >> "$GITHUB_OUTPUT"

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: release-artifacts
          path: artifacts/
          if-no-files-found: error

  release:
    name: Create Release
    needs: [verify, build]
    runs-on: macos-13
    env:
      VERSION: ${{ needs.verify.outputs.version }}
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          name: release-artifacts
          path: artifacts

      - name: Create Release
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: artifacts/MacAITextImprover-${{ env.VERSION }}.dmg
          body_file: artifacts/release_notes.md
          name: "Version ${{ env.VERSION }}"
          tag_name: v${{ env.VERSION }}
          draft: true 